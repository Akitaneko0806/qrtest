import os
import glob
import shutil

# 対象のディレクトリ
root_dir = 'C:/Users/2880/Desktop/QRコード/アンケート'

# 取得するファイルのパターン
patterns = [
    'app/**/*.py',
    'app/*.py',
    'config/**/*.py',
    'config/*.py',
    'templates/**/*.html',
    'templates/*.html',
    'test/*.py',
    'test/*.html',
    'requirements.txt',
    'README.md',
    'run.py',
    'get.py',
    'save_code_files.py',
    'app/static/css/*.css',
    'app/static/js/*.js',
    
]

# ファイル内容を保存するディレクトリを作成
output_dir = 'output_files'
os.makedirs(output_dir, exist_ok=True)

# パターンにマッチするファイルを取得し内容を保存
for pattern in patterns:
    for file_path in glob.glob(os.path.join(root_dir, pattern), recursive=True):
        if os.path.isfile(file_path):
            try:
                with open(file_path, 'rb') as file:
                    content = file.read().decode('utf-8', errors='ignore')
                # 出力ファイルパスを作成
                relative_path = os.path.relpath(file_path, root_dir)
                output_file_path = os.path.join(output_dir, relative_path.replace(os.sep, '_') + '.txt')
                os.makedirs(os.path.dirname(output_file_path), exist_ok=True)
                with open(output_file_path, 'w', encoding='utf-8') as output_file:
                    output_file.write(content)
                print(f'{file_path} の内容を {output_file_path} に保存しました。')
            except Exception as e:
                print(f'Error processing {file_path}: {e}')

# ZIPファイルに圧縮
shutil.make_archive('source_codes', 'zip', output_dir)

print('すべてのファイルを source_codes.zip に圧縮しました。')